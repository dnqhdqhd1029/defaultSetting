/*input*/

input[type="password"],
input[type="tel"],
input[type="serach"],
input[type="number"],
input[type="text"] {
  display: block;
  //width: -webkit-fill-available;
  height: 40px;
  border: 1px solid #E9E9E9;
  color: $gray;
  padding: 0 10px;
  width: 93%;
  border-radius: 6px;
}
input.inline {
  display: inline-block;
  width: auto;
}

input[type="password"]:focus,
input[type="tel"]:focus,
input[type="serach"]:focus,
input[type="number"]:focus,
input[type="text"]:focus,
input.focus {
  border: 1px solid $primary;
  color: $gray;
  outline: 0;
  box-shadow: none;
}

input.error {
  border: 1px solid $danger;
  color: $gray;
  outline: 0;
  box-shadow: none;
}

input[type="password"]::placeholder,
input[type="tel"]::placeholder,
input[type="serach"]::placeholder,
input[type="number"]::placeholder,
input[type="text"]::placeholder {
  color: $info;
  letter-spacing: -1px;
}

input[type="password"]:disabled,
input[type="tel"]:disabled,
input[type="serach"]:disabled,
input[type="number"]:disabled,
input[type="text"]:disabled {
  border: 1px solid $info;
  background: $info;
  color: $lightGray;
}

input[type="password"]:disabled::placeholder,
input[type="tel"]:disabled::placeholder,
input[type="serach"]:disabled::placeholder,
input[type="number"]:disabled::placeholder,
input[type="text"]:disabled::placeholder {
  color: $lightGray;
}


/*checkbox*/

label input[type="checkbox"] {
  display: none;
}

label input[type="checkbox"] + span {
  background-image: url(../images/svg/icon-checkbox-off.svg);
  @include iconLeft;
  background-size: $iconMd - 2px;
  min-width: $iconMd;
  height: $iconMd;
  line-height: $iconMd;
  font-size: inherit;
  padding-left: $iconMd + 5px;
}

label input[type="checkbox"]:checked + span {
  background-image: url(../images/svg/icon-checkbox-on.svg);
  @include iconLeft;
}

label input[type="checkbox"]:disabled + span {
  background-image: url(../images/svg/icon-checkbox-dim.svg);
  @include iconLeft;
}

label input[type="checkbox"] + span.none {
  font-size: 0;
  width: $iconMd;
  height: $iconMd;
  text-indent: -99999px;
  padding-left: 0;
}

label input + span {
  margin-right: 10px;
}
/*라디오버튼*/
label input[type="radio"] {
  display: none;
}

label input[type="radio"] + span {
  background-image: url(../images/svg/icon-radio-off.svg);
  @include iconLeft;
  background-size: $iconMd;
  min-width: $iconMd;
  height: $iconMd;
  line-height: $iconMd;
  font-size: inherit;
  padding-left: $iconMd + 5px;
}

label input[type="radio"]:checked + span {
  background-image: url(../images/svg/icon-radio-on.svg);
  @include iconLeft;
}

label input[type="radio"]:disabled + span {
  background-image: url(../images/svg/icon-radio-dim.svg);
  @include iconLeft;
}

label input[type="radio"] + span.none {
  font-size: 0;
  width: $iconMd;
  height: $iconMd;
  text-indent: -99999px;
  padding-left: 0;
}

label input.none {
  border: none;
}

/*토굴 체크박스*/

label.toggleSwitch {
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  height: 24px;
}

label.toggleSwitch input[type="checkbox"] {
  display: block;
  appearance: none;
  position: relative;
  border-radius: 12px;
  width: 24px;
  height: 10px;
  background-color:#E9E9E9;
}

label.toggleSwitch input[type="checkbox"]::before {
  content: "";
  position: absolute;
  top: -6px;
  left: -10px;
  width: 22px;
  height: 22px;
  border-radius: 50%;
  transform: scale(0.8);
  background-color: $white;
  border: 1px solid #E9E9E9;
  transition: left 250ms linear;

}
label.toggleSwitch input[type="checkbox"]:checked::before {
  background-color: $white;
  border: 1px solid #4ABAF6;
  top: -6px;
  left: 8px;
}

label.toggleSwitch input[type="checkbox"]:checked {
  background-color: $blue;
  border: 1px solid #4ABAF6;
}

label.toggleSwitch input[type="checkbox"]:disabled {
  border-color: $info;
  background-color: $info;
  opacity: 0.7;
  cursor: not-allowed;
}

label.toggleSwitch input[type="checkbox"]:disabled:before {
  background-color: $white;
}

label.toggleSwitch input[type="checkbox"] + span {
  background-image: none;
  padding-left: 0;
  margin: 0 10px 0 5px;

}

label.toggleSwitch input[type="checkbox"]:disabled + span {
  opacity: 0.7;
  cursor: not-allowed;
}

label.toggleSwitch span {
  color: $gray;
}

/*버튼스타일 체크박스 라이오 박스*/
.buttonStyle{
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: #FAFAFA;
  border-radius: 6px;
  overflow: hidden;
}
.buttonStyle label input[type="radio"],
.buttonStyle label input[type="checkbox"] {
  display: none;
}
.buttonStyle label{
  flex: 1;
  height: 40px;
  border-radius: 6px;
  background:transparent;
}
.buttonStyle label input[type="radio"] + span,
.buttonStyle label input[type="checkbox"] + span {
  width: 100%;
  height: 100%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background:none;
  padding-left: 0;
  color: $lightGray;
  font-size: 14px;
}
.buttonStyle label input[type="radio"]:checked + span,
.buttonStyle label input[type="checkbox"]:checked + span {

  border: 1px solid #219BF1;
  border-radius: 6px;
  background-size:20px;
  color: $black;
  background-color: #fff;
}
.buttonStyle label input[type="radio"]:checked + span:before,
.buttonStyle label input[type="checkbox"]:checked + span:before{
  content: '';
  width: 20px;
  height: 20px;
  background: url(../images/svg/icon-check.svg) center center no-repeat;
  background-size: contain;
  margin-right: 5px;
}

.buttonStyle label input[type="radio"]:disabled + span,
.buttonStyle label input[type="checkbox"]:disabled + span {

  @include iconLeft;
}


.buttonStyle  label input + span {
  margin-right: 0;
}

/*select*/
.selectContent {
  position: relative;
  display: inline-block;
}
.selectPull {
  display: block;
}

.selectContent:before {
  content: "";
  display: inline-block;
  position: absolute;
  right: 20px;
  top: 12px;
  width: 2px;
  height: 8px;
  background: $primary;
  transform: rotate(-45deg);
  pointer-events: none;
}
.selectContent:after {
  content: "";
  color: #fff;
  display: inline-block;
  position: absolute;
  right: 14px;
  top: 12px;
  width: 2px;
  height: 8px;
  background: $primary;
  transform: rotate(45deg);
  pointer-events: none;
}
select {
  box-sizing: border-box;
  padding: 0 15px 0 14px;
  background: $white;
  //height: $heightXs;
  line-height: 26px;
  //color: $dark;
  font-size: $fontSm;
  border: 1px solid $info;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  //border-radius: $radius;
  background: url("../images/svg/icon-select.svg") right center no-repeat;
}

select::-ms-expand {
  display: none;
}

select option[value=""][disabled] {
  display: none;
}

select:focus {
  outline: none;
}

select.select option {
  height: 60px;
  padding: 10px;
}

.selectRound {
  box-sizing: border-box;
  padding:0 15px;
  background: $white;
  line-height: 26px;
  color: gray;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 150px;
  height: 40px;
  border-radius: 26px;
  font-size: 14px;
  text-align: left;
  background:#F1F1F1 url("../images/svg/icon-select-right.svg") 90% center no-repeat;
}

/*date*/
input[type="date"] {
  border: none; // 테두리 설정은 본인 맘대로
  position: relative; // 캘린더 아이콘을 클릭해야만 달력이 보이기 때문에 이 영역 자체를 제어하기 위해 설정
  width: 100%;
  height: 40px;
  border-radius: 6px;
  border: 1px solid #E9E9E9;
  background: #FFF;
  background: url(../images/svg/icon-moth.svg) no-repeat right 10px center;
  text-align: center;
  font-size: 100%;
  color: $gray;
  text-align: left;
  padding-left: 10px;
}


// ispnput의 어떤 곳을 클릭해도 캘린더를 클릭한 것과 같은 효과
input[type="date"]::-webkit-calendar-picker-indicator {
  position: absolute; // 이를 설정하기 위해 사전에 relative를 설정한 것이다.
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: transparent;
  color: transparent;
  cursor: pointer;
  font-size: 0;
}

// type이 date인 input의 placeholder를 커스텀하기 위한 선택자
// 기본적으로 type date인 input은 placeholder가 먹히지 않기 때문이다!
input[type="date"]::before {
  font-family: "Noto Sans", sans-serif;
  content: attr(
    placeholder
  ); // input 태그의 placeholder라는 속성값을 가져와서 content로 사용한다.
  // 보통은 placeholder보다는 data-placeholder라는 커스텀 속성을 만들어서 사용하시는 것 같다.
  width: 100%;
  height: 100%;
  color: #ddd;
  padding-top: 27px;
  margin-bottom: 14px;
}

// input에 어떠한 유효값이 입력된 상태인지 확인하는 선택자
// 날짜를 선택하면 유효값이 입력된다.
// 이 속성을 활용하고자 한다면 반드시 태그에 required 속성을 달아줘야한다.
input[type="date"]:valid::before {
  display: none; // 유효값이 입력된 경우 before에 있는 것을 사라지게 한다.
  // 즉, placeholder를 사라지게 한다.
}


/*gradeContent 평점*/
.gradeContent{
  direction: rtl; /* 이모지 순서 반전 */
  display: inline-block;
}

.gradeContent button,
.gradeContent button.off{
  margin: 0 5px 0 5px;
  width: 30px;
  height: 30px;
  background-image: url(../images/svg/icon-grade-off.svg);
  @include iconCenter;
  background-size: contain;
  font-size: 0;
}

.gradeContent button:hover ~ button,
.gradeContent button:hover,
.gradeContent button.on{

  background-image: url(../images/svg/icon-grade-on.svg);
  @include iconCenter;
}



/* 숨겨진 실제 파일 입력 필드 */
.fileUpload{
  input[type="file"] {
    display: none;
  }
  label{
    display: inline-block;
    padding:5px 10px;
    background-color: #7996B7;
    color: white;
    cursor: pointer;
    transition: background-color 0.3s ease;
    border-radius: 6px;
    min-width: 80px;

    &:hover{
      background-color: #7996B7;
    }
  }

  .fileName{
    font-size: 12px;
    margin-right: 10px;
  }

  em{
    font-size: 12px;
    color: #7996B7;
  }
}



/*textarea*/

textarea {
  border: 1px solid $info;
  color: $gray;
  font-size: inherit;
  width: 100%;
  padding: 9px 0;
  min-width: 100%;
  height: 40px;
  max-height: 200px;
  font-family: "Noto Sans", sans-serif;
  box-sizing: border-box;
  resize: none;
  //overflow-y: auto;
  position: relative;
  background-color: #fff;


  &.resize{
    background:#fff url("../images/svg/icon-scale-sm.svg") 94% 3px no-repeat;
    background-size: 20px;
    padding-right: 30px;

  }
}

textarea:focus {
  border: 1px solid $primary;
  color: $gray;
  outline: 0;
  box-shadow: none;
}

textarea::placeholder {
  color: $info;
  opacity: 1;
}


/*searchArea*/
.searchArea{
  .search{

    border-radius: 28px;
    background: #3D637C;
    height: 40px;
    @include fs;
    padding: 0 5px;

    @include mobile{
      height: 56px;
    }

    textarea{
      flex: 1;
      background: transparent;
      border: 0;
      color: #fff;
      font-size: 14px;
      font-family: "Noto Sans", sans-serif;
      min-width: auto;
      padding-left: 10px;
    }

    .enter{
      width: 32px ;
      height: 32px ;
      background: url("../images/svg/icon-enter.svg") center center no-repeat;
      background-size: contain;
      margin-left: 10px;

      @include mobile{
        width: 40px;
        height: 40px;
      }
    }

  }

}

/* 공통 영역 - 기본 요소에 스크롤바 커스터마이징 적용 */
.scroll {
  /* Firefox용 스크롤바 스타일 */
  scrollbar-width: thin; /* thin, auto, none */
  scrollbar-color: #A6B0BE transparent; /* 막대 색상과 트랙 색상 */
  border-radius: 4px; /* 막대 모서리 둥글게 */

}

/* WebKit 기반 브라우저용 스크롤바 스타일 */
.scroll::-webkit-scrollbar {
  width: 3px; /* 스크롤바 너비 (세로 스크롤) */
  height: 3px; /* 스크롤바 높이 (가로 스크롤) */
  border-radius: 4px;
}

/* 스크롤바 막대 (Thumb) */
.scroll::-webkit-scrollbar-thumb {
  background-color: #A6B0BE; /* 스크롤바 막대 색상 */
  border-radius: 4px; /* 막대 모서리 둥글게 */
  border: 3px solid transparent; /* 내부 여백 */
  background-clip: content-box; /* 내부 클립 */
  transition: background-color 0.3s ease;

}

/* 막대 위에 마우스를 올렸을 때 색상 변화 */
.scroll::-webkit-scrollbar-thumb:hover {
  background-color: #A6B0BE; /* hover 상태에서의 막대 색상 */
}

/* 스크롤바 트랙 (스크롤바 배경) */
.scroll::-webkit-scrollbar-track {
  background-color: transparent; /* 트랙(배경) 색상 */
  border-radius: 4px;
}

/* 트랙 안쪽에 여백을 주고 싶다면 */
.scroll::-webkit-scrollbar-track-piece {
  margin: 2px;
  background-color: #000; /* 내부 트랙 색상 */
}

/* 스크롤바의 코너(세로와 가로 스크롤이 교차하는 부분) 디자인 */
.scroll::-webkit-scrollbar-corner {
  background-color: #f1f1f1; /* 코너 색상 */
}
